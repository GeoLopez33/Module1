import java.util.ArrayList;
import java.util.Collections;
import java.util.List;


public class Arrays {

	public static void main(String[] args) {
		
		ArrayList<String> names = new ArrayList<String>();
		names.add("Carl");
		names.add("Susie");
		names.add("Cory");
		names.add("Michael");
		names.add("Kyle");
		names.add("Pula");
		names.add("AJ");
		names.add("Levon");
		
		for (String name: names) {
			System.out.println(name);
		}
		
		Collections.sort(names);
		
		System.out.println("\nSorted list: \n" + names);
		
		Collections.shuffle(names);
		
		System.out.println("\nShuffled list: \n" + names);
		
		/*
		 * Collections is a class that all lists are derived from. While Collection is an interface 
		 * that has many methods that can be used to interact with objects. 
		 * The difference between a class and an interface is that a class ultimately becomes 
		 * an object within the program while an only interface contains actions that allow interactions.
		 * One has a set of commands only when the other can be commanded.
		 * 
		 * https://www.programiz.com/java-programming/collection-interface
		 * */
		
		
		
		
		System.out.println("Array Position of Cory: " + names.indexOf("Cory"));
		
		System.out.println("Array Position of Kristen: " + names.indexOf("Kristen\n"));
		
		Object[] arrnames = names.toArray();
		
		System.out.println("\nArray Printed");
		
		for (Object name: arrnames) {
			System.out.println(name);
		}
		
		System.out.println("\n");
		
		List<Object> listn = convertArrayToList(arrnames);
		
		System.out.println("List Printed");
		
		for (Object name: listn) {
			System.out.println(name);
		}
		
	}
	
	public static <T> List<T> convertArrayToList(T array[])
    {
  
        
        List<T> list = new ArrayList<>();
  
        
        for (T t : array) {
            
            list.add(t);
        }
  
   
        return list;
    }
}
